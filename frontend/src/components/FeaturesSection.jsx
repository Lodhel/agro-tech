import React, { useEffect, useRef, useState } from 'react';

const features = [
  {
    icon: 'üó∫Ô∏è',
    title: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —É—á–∞—Å—Ç–∫–∞',
    text: '–û—Ç–º–µ—á–∞–π—Ç–µ –≥—Ä—è–¥–∫–∏, –¥–µ—Ä–µ–≤—å—è, –∫—É—Å—Ç–∞—Ä–Ω–∏–∫–∏.',
    details: '–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –∫—É–ª—å—Ç—É—Ä, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∑–æ–Ω—ã, —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π.',
  },
  {
    icon: 'üå±',
    title: '–ë–∞–∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π',
    text: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ä–æ–∫–∞–º –∏ —É—Ö–æ–¥—É.',
    details: '–ö–∞—Ä—Ç–æ—á–∫–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: –ø–æ—Å–µ–≤, –ø–æ–ª–∏–≤, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –ø–æ–¥–∫–æ—Ä–º–∫–∞.',
  },
  {
    icon: 'üì¶',
    title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏',
    text: '–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å–µ–º–µ–Ω–∞ –∏ —É–¥–æ–±—Ä–µ–Ω–∏—è.',
    details: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Wildberries, Ozon –∏ –∞–≥—Ä–æ-–º–∞–≥–∞–∑–∏–Ω–∞–º–∏. –û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –æ–Ω–ª–∞–π–Ω.',
  },
  {
    icon: 'üì∑',
    title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ',
    text: '–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–æ—Ç–æ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.',
    details: '–ù–µ–π—Ä–æ—Å–µ—Ç—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –±–æ–ª–µ–∑–Ω–∏ –ø–æ –ª–∏—Å—Ç—É –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –º–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è.',
  },
];

const FeaturesSection = () => {
  const sliderRef = useRef(null);
  const [expandedIndex, setExpandedIndex] = useState(null);

  useEffect(() => {
    const slider = sliderRef.current;
    if (!slider) return;

    const scrollStep = 340;
    const interval = 4000;

    const autoScroll = setInterval(() => {
      if (slider.scrollLeft + slider.clientWidth >= slider.scrollWidth - 10) {
        slider.scrollTo({ left: 0, behavior: 'smooth' });
      } else {
        slider.scrollBy({ left: scrollStep, behavior: 'smooth' });
      }
    }, interval);

    return () => clearInterval(autoScroll);
  }, []);

  return (
    <section className="features" id="features">
      <div className="container">
        <h2>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞</h2>
        <div className="features-slider-wrapper">
          <div className="features-slider" ref={sliderRef}>
            {features.map((f, idx) => (
              <div
                className={`feature-card-tile ${expandedIndex === idx ? 'expanded' : ''}`}
                key={f.title}
              >
                <div className="feature-icon">{f.icon}</div>
                <h3>{f.title}</h3>
                <p>{f.text}</p>
                <button
                  className="feature-button"
                  onClick={() => setExpandedIndex(expandedIndex === idx ? null : idx)}
                >
                  {expandedIndex === idx ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'}
                </button>
                {expandedIndex === idx && (
                  <div className="feature-details">
                    {f.details}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default FeaturesSection;
