import React, { useEffect, useRef } from 'react';

const features = [
  {
    icon: 'üó∫Ô∏è',
    title: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —É—á–∞—Å—Ç–∫–∞',
    text: '–û—Ç–º–µ—á–∞–π—Ç–µ –≥—Ä—è–¥–∫–∏, –¥–µ—Ä–µ–≤—å—è, –∫—É—Å—Ç–∞—Ä–Ω–∏–∫–∏. –î–æ–±–∞–≤–ª—è–π—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É.',
  },
  {
    icon: 'üå±',
    title: '–ë–∞–∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –∏—Å—Ç–æ—Ä–∏—è –ø–æ—Å–∞–¥–æ–∫',
    text: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ä–æ–∫–∞–º, —É—Ö–æ–¥—É, –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–∑–æ–Ω–æ–≤ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.',
  },
  {
    icon: 'üíß',
    title: '–£—Ö–æ–¥ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
    text: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–æ–ª–∏–≤—É, –ø–æ–¥–∫–æ—Ä–º–∫–µ –∏ –æ–±—Ä–µ–∑–∫–µ —Å —É—á—ë—Ç–æ–º –∫–ª–∏–º–∞—Ç–∞ –∏ –ø–æ—á–≤—ã.',
  },
  {
    icon: 'üì∑',
    title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ',
    text: '–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–æ—Ç–æ ‚Äî –ø–æ–ª—É—á–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª–µ—á–µ–Ω–∏—é.',
  },
  {
    icon: 'üß™',
    title: '–ú–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è',
    text: '–í—ã–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤ –∏ –º–µ—Ç–æ–¥–æ–≤ –±–æ—Ä—å–±—ã —Å –≤—Ä–µ–¥–∏—Ç–µ–ª—è–º–∏: –Ω–∞—Ä–æ–¥–Ω—ã–µ, –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ, —Ö–∏–º–∏—á–µ—Å–∫–∏–µ.',
  },
  {
    icon: 'üìÜ',
    title: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–∞–¥–æ–≤–æ–¥–∞',
    text: '–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.',
  },
  {
    icon: 'üë•',
    title: '–§–æ—Ä—É–º –∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
    text: '–û–±—â–∞–π—Ç–µ—Å—å, –¥–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥–∞–π—Ç–µ –¥—Ä—É–≥–∏–º.',
  },
  {
    icon: 'üì¶',
    title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏',
    text: '–°–≤—è–∑—å —Å –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏ —Å–µ–º—è–Ω, —É–¥–æ–±—Ä–µ–Ω–∏–π –∏ –∑–∞–∫–∞–∑ –Ω—É–∂–Ω–æ–≥–æ –æ–Ω–ª–∞–π–Ω.',
  },
];

const FeaturesSection = () => {
  const sliderRef = useRef(null);

  useEffect(() => {
    const slider = sliderRef.current;
    if (!slider) return;

    const scrollStep = 320;
    const interval = 3000;

    const autoScroll = setInterval(() => {
      if (slider.scrollLeft + slider.clientWidth >= slider.scrollWidth - 10) {
        slider.scrollTo({ left: 0, behavior: 'smooth' });
      } else {
        slider.scrollBy({ left: scrollStep, behavior: 'smooth' });
      }
    }, interval);

    return () => clearInterval(autoScroll);
  }, []);

  return (
    <section className="features" id="features">
    <div className="container">
      <h2>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞</h2>
      <div className="features-slider-wrapper">
        <div className="features-slider" ref={sliderRef}>
          {features.map(({ icon, title, text }) => (
            <div className="feature-card" key={title}>
              <div className="feature-icon">{icon}</div>
              <h3>{title}</h3>
              <p>{text}</p>
            </div>
          ))}
        </div>
      </div>
      </div>
    </section>
  );
};

export default FeaturesSection;
